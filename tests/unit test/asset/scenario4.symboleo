/* 
 * Description: inherit an asset
 * Cover asset polymorphism
 * Challenge: asset inheritance
 * */
Domain domain
Role1 isA Role;
Role2 isA Role;
Asset1 isAn Asset with owner: String, att1: Number;
Asset2 isAn Asset1 with owner: String, att2: String;
Event1 isAn Event;
Event2 isAn Event;
Event3 isAn Event;
endDomain

Contract contr (role1 : Role1, role2 : Role2, party1: String, party2: String, att_val1 : Number, att_val2 : String, owner : String)

Declarations
asset2: Asset2 with owner := owner, att1 := att_val1, att2 := att_val2;
role1: Role1 with party:= party1;
role2: Role2 with party:= party2;
event1: Event1;
event2: Event2;
event3: Event3;

Obligations

Obl1: O(role1, role2, true, ShappensBefore(event1, event2));
Obl2: O(role2, role1, true, HappensAfter(event2, event3));

endContract